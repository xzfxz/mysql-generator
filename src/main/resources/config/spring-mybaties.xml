<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd


       http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <bean id="bizDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="url" value="${db_url_biz}"/>
        <property name="username" value="${db_username_biz}" />
        <property name="password" value="${db_password_biz}" />
        <property name="filters" value="stat" />
        <!--最大连接数据库连接数,设 0 为没有限制-->
        <property name="maxActive" value="500" />
        <property name="initialSize" value="20" />
        <!--最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。-->
        <property name="maxWait" value="60000" />
        <!--使没有数据库连接时依然可以保持的链接数量-->
        <property name="minIdle" value="10" />
        <!--是否自动回收超时连接-->
        <property name="removeAbandoned" value="true"/>
        <!--延长超时时间-->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
    </bean>

    <!--业务的事务管理器 -->
    <!-- Configure the transaction -->
    <bean id="bizTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="bizDataSource"/>
    </bean>

    <!-- MyBatis 配置开始 -->
    <!-- sqlSessionFactory配置 -->
    <bean id="bizSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:config/mybatis/conf/mybatis-config-biz.xml"/>
        <property name="mapperLocations" value="classpath:config/mybatis/mappers/biz/*.xml"/>
        <property name="dataSource" ref="bizDataSource" />
    </bean>

    <!-- sqlSessionTemplate配置 -->
    <bean id="bizSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <!-- 参数1: sqlSessionFactory|参数2：ExecutorType -->
        <constructor-arg index="0" ref="bizSqlSessionFactory" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--you should know this!-->
        <property name="basePackage" value="com.tqg.zhao.*.dao" />
        <property name="sqlSessionTemplateBeanName" value="bizSqlSessionTemplate"/>
    </bean>
    <!-- MyBatis 配置结束 -->

    <aop:config proxy-target-class="true"/>

</beans>

